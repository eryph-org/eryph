trigger:
- master
- main
- refs/tags/v*

jobs:
- job: apps
  pool:
    vmImage: windows-2022  

  variables:
   - group: 'eryph'
   - name: buildConfiguration
     value: 'Release'
   - name: signHash
     value: ''

  steps:
  - task: DotNetCoreCLI@2
    displayName: Install AzureSignTool
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install --global azuresigntool'
      
  - task: AzureCLI@2
    displayName: download signed ovs package
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      azureSubscription: 'dbosoft Azure PN'
      scriptType: 'batch'
      scriptLocation: 'inlineScript'
      inlineScript: 'az storage blob download --file=$(Build.SourcesDirectory)\ovspackage.zip --container-name=internal --name=ovs/3.3.90.1/ovspackage_signed.zip --account-name=dbosoftreleaseseuwest'
    
  - task: UseGitVersion@5
    inputs:
      versionSpec: '5.x'

  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      feedsToUse: 'config'
      nugetConfigPath: 'nuget.config'
  
  - task: DotNetCoreCLI@2
    displayName: dotnet tool restore
    inputs:
      command: custom
      custom: 'tool'
      arguments: 'restore'
      feedsToUse: 'config'
      nugetConfigPath: 'nuget.config'
      
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --no-restore'

  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      projects: '**/test/**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --collect "Code coverage" --no-build --filter "Category!=Docker"'

  - task: DotNetCoreCLI@2
    displayName: publish zero app
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '**/apps/**/*-zero/*.csproj'
      arguments: '--configuration $(buildConfiguration) --no-build --output $(Build.ArtifactStagingDirectory)\zero_build /p:SignHash=$(signHash)'
      zipAfterPublish: false

  - task: CmdLine@2
    displayName: rename zero build
    inputs:
      script: 'ren eryph-zero bin'
      workingDirectory: '$(Build.ArtifactStagingDirectory)\zero_build'

  - task: DotNetCoreCLI@2
    displayName: publish uninstaller app
    inputs:
      command: 'publish'
      publishWebProjects: false
      modifyOutputPath: false
      projects: '**/apps/**/*-uninstaller/*.csproj'
      arguments: '--configuration $(buildConfiguration) --no-build --output $(Build.ArtifactStagingDirectory)\zero_build\bin /p:SignHash=$(signHash)'
      zipAfterPublish: false

  - task: PowerShell@2
    displayName: Generate migration SQL
    inputs:
      filePath: $(Build.SourcesDirectory)\src\data\src\Eryph.StateDb.Design\Generate-MigrationSql.ps1
      arguments: -Output $(Build.ArtifactStagingDirectory)\zero_build\migrations
      workingDirectory: $(Build.SourcesDirectory)\src\data\src\Eryph.StateDb.Design\
      pwsh: true

  - task: AzureCLI@2
    displayName: 'Sign executables'
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      scriptType: ps
      scriptLocation: inlineScript
      azureSubscription: 'dbosoft Azure PN'
      addSpnToEnvironment: true
      workingDirectory: '$(Build.ArtifactStagingDirectory)\zero_build\bin'
      inlineScript: |
        AzureSignTool sign -kvu "https://dbosoft-hsm-vault.vault.azure.net" -kvi $Env:servicePrincipalId -kvt $Env:tenantId -kvs $Env:servicePrincipalKey -tr http://rfc3161timestamp.globalsign.com/advanced -kvc "codesigning-2023" -v eryph-zero.exe
        AzureSignTool sign -kvu "https://dbosoft-hsm-vault.vault.azure.net" -kvi $Env:servicePrincipalId -kvt $Env:tenantId -kvs $Env:servicePrincipalKey -tr http://rfc3161timestamp.globalsign.com/advanced -kvc "codesigning-2023" -v eryph-uninstaller.exe

  - task: CopyFiles@2
    displayName: copy ovs package to zero build
    inputs:
      Contents: 'ovspackage.zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\zero_build'

  - task: ArchiveFiles@2
    displayName: pack zero build
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\zero_build'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/apps/zero/eryph_zero_$(Build.BuildNumber)_windows_amd64.zip'

  - task: PublishBuildArtifacts@1
    displayName: upload zero artifact
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/apps/zero'
      ArtifactName: 'zero'

- job: test
  pool:
    vmImage: ubuntu-22.04

  variables:
   - name: buildConfiguration
     value: 'Release'

  steps:
  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      feedsToUse: 'config'
      nugetConfigPath: 'nuget.config'
      
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --no-restore'

  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      # We exclude projects which require Windows to avoid errors
      projects: '**/test/**/!(*VmHostAgent*|*VmManagement*).csproj'
      arguments: '--configuration $(buildConfiguration) --collect "Code coverage" --no-build --filter "Category=Docker"'
