// <auto-generated />
using System;
using Eryph.StateDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eryph.StateDb.Migrations
{
    [DbContext(typeof(StateStoreContext))]
    [Migration("20220127112059_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Eryph.StateDb.Model.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MachineType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResourceType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Machines");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Machine");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.MachineNetwork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DnsServersInternal")
                        .HasColumnType("TEXT")
                        .HasColumnName("DnsServers");

                    b.Property<string>("IPv4DefaultGateway")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPv6DefaultGateway")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpV4AddressesInternal")
                        .HasColumnType("TEXT")
                        .HasColumnName("IpV4Addresses");

                    b.Property<string>("IpV4SubnetsInternal")
                        .HasColumnType("TEXT")
                        .HasColumnName("IpV4Subnets");

                    b.Property<string>("IpV6AddressesInternal")
                        .HasColumnType("TEXT")
                        .HasColumnName("IpV6Addresses");

                    b.Property<string>("IpV6SubnetsInternal")
                        .HasColumnType("TEXT")
                        .HasColumnName("IpV6Subnets");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("MachineNetworks");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.OperationLogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OperationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.HasIndex("TaskId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.OperationResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OperationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResourceType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationResources");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.OperationTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OperationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationTasks");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.Subnet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DhcpEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GatewayAddress")
                        .HasColumnType("TEXT");

                    b.Property<byte>("IpVersion")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Address");

                    b.ToTable("Subnets");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualDisk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DataStore")
                        .HasColumnType("TEXT");

                    b.Property<int>("DiskType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Environment")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<string>("Project")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResourceType")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SizeBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StorageIdentifier")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("VirtualDisks");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualMachineDrive", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AttachedDiskId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AttachedDiskId");

                    b.HasIndex("MachineId");

                    b.ToTable("VirtualMachineDrives");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualMachineMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualMachineNetworkAdapter", b =>
                {
                    b.Property<Guid>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("MacAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SwitchName")
                        .HasColumnType("TEXT");

                    b.HasKey("MachineId", "Id");

                    b.ToTable("VirtualMachineNetworkAdapters");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualMachine", b =>
                {
                    b.HasBaseType("Eryph.StateDb.Model.Machine");

                    b.Property<Guid?>("HostId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MetadataId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VMId")
                        .HasColumnType("TEXT");

                    b.HasIndex("HostId");

                    b.HasDiscriminator().HasValue("VirtualMachine");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VMHostMachine", b =>
                {
                    b.HasBaseType("Eryph.StateDb.Model.Machine");

                    b.Property<string>("HardwareId")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("VMHostMachine");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.MachineNetwork", b =>
                {
                    b.HasOne("Eryph.StateDb.Model.Machine", "Machine")
                        .WithMany("Networks")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.OperationLogEntry", b =>
                {
                    b.HasOne("Eryph.StateDb.Model.Operation", "Operation")
                        .WithMany("LogEntries")
                        .HasForeignKey("OperationId");

                    b.HasOne("Eryph.StateDb.Model.OperationTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("Operation");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.OperationResource", b =>
                {
                    b.HasOne("Eryph.StateDb.Model.Operation", "Operation")
                        .WithMany("Resources")
                        .HasForeignKey("OperationId");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.OperationTask", b =>
                {
                    b.HasOne("Eryph.StateDb.Model.Operation", "Operation")
                        .WithMany("Tasks")
                        .HasForeignKey("OperationId");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualDisk", b =>
                {
                    b.HasOne("Eryph.StateDb.Model.VirtualDisk", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualMachineDrive", b =>
                {
                    b.HasOne("Eryph.StateDb.Model.VirtualDisk", "AttachedDisk")
                        .WithMany("AttachedDrives")
                        .HasForeignKey("AttachedDiskId");

                    b.HasOne("Eryph.StateDb.Model.VirtualMachine", "Vm")
                        .WithMany("Drives")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttachedDisk");

                    b.Navigation("Vm");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualMachineNetworkAdapter", b =>
                {
                    b.HasOne("Eryph.StateDb.Model.VirtualMachine", "Vm")
                        .WithMany("NetworkAdapters")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vm");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualMachine", b =>
                {
                    b.HasOne("Eryph.StateDb.Model.VMHostMachine", "Host")
                        .WithMany("VMs")
                        .HasForeignKey("HostId");

                    b.Navigation("Host");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.Machine", b =>
                {
                    b.Navigation("Networks");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.Operation", b =>
                {
                    b.Navigation("LogEntries");

                    b.Navigation("Resources");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualDisk", b =>
                {
                    b.Navigation("AttachedDrives");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VirtualMachine", b =>
                {
                    b.Navigation("Drives");

                    b.Navigation("NetworkAdapters");
                });

            modelBuilder.Entity("Eryph.StateDb.Model.VMHostMachine", b =>
                {
                    b.Navigation("VMs");
                });
#pragma warning restore 612, 618
        }
    }
}
